// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Rosetta.Models
{
    /// <summary> CallResponse contains the result of a `/call` invocation. </summary>
    public partial class CallResponse
    {
        /// <summary> Initializes a new instance of CallResponse. </summary>
        /// <param name="result"> Result contains the result of the `/call` invocation. This result will not be inspected or interpreted by Rosetta tooling and is left to the caller to decode. </param>
        /// <param name="idempotent"> Idempotent indicates that if `/call` is invoked with the same CallRequest again, at any point in time, it will return the same CallResponse. Integrators may cache the CallResponse if this is set to true to avoid making unnecessary calls to the Rosetta implementation. For this reason, implementers should be very conservative about returning true here or they could cause issues for the caller. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="result"/> is null. </exception>
        internal CallResponse(object result, bool idempotent)
        {
            if (result == null)
            {
                throw new ArgumentNullException(nameof(result));
            }

            Result = result;
            Idempotent = idempotent;
        }

        /// <summary> Result contains the result of the `/call` invocation. This result will not be inspected or interpreted by Rosetta tooling and is left to the caller to decode. </summary>
        public object Result { get; }
        /// <summary> Idempotent indicates that if `/call` is invoked with the same CallRequest again, at any point in time, it will return the same CallResponse. Integrators may cache the CallResponse if this is set to true to avoid making unnecessary calls to the Rosetta implementation. For this reason, implementers should be very conservative about returning true here or they could cause issues for the caller. </summary>
        public bool Idempotent { get; }
    }
}
