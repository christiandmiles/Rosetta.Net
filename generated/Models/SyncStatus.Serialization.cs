// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Rosetta.Models
{
    public partial class SyncStatus
    {
        internal static SyncStatus DeserializeSyncStatus(JsonElement element)
        {
            Optional<long> currentIndex = default;
            Optional<long> targetIndex = default;
            Optional<string> stage = default;
            Optional<bool> synced = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("current_index"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    currentIndex = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("target_index"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    targetIndex = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("stage"))
                {
                    stage = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("synced"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    synced = property.Value.GetBoolean();
                    continue;
                }
            }
            return new SyncStatus(Optional.ToNullable(currentIndex), Optional.ToNullable(targetIndex), stage.Value, Optional.ToNullable(synced));
        }
    }
}
