// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Rosetta.Models
{
    /// <summary> EventsBlocksRequest is utilized to fetch a sequence of BlockEvents indicating which blocks were added and removed from storage to reach the current state. </summary>
    public partial class EventsBlocksRequest
    {
        /// <summary> Initializes a new instance of EventsBlocksRequest. </summary>
        /// <param name="networkIdentifier"> The network_identifier specifies which network a particular object is associated with. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkIdentifier"/> is null. </exception>
        public EventsBlocksRequest(NetworkIdentifier networkIdentifier)
        {
            if (networkIdentifier == null)
            {
                throw new ArgumentNullException(nameof(networkIdentifier));
            }

            NetworkIdentifier = networkIdentifier;
        }

        /// <summary> The network_identifier specifies which network a particular object is associated with. </summary>
        public NetworkIdentifier NetworkIdentifier { get; }
        /// <summary> offset is the offset into the event stream to sync events from. If this field is not populated, we return the limit events backwards from tip. If this is set to 0, we start from the beginning. </summary>
        public long? Offset { get; set; }
        /// <summary> limit is the maximum number of events to fetch in one call. The implementation may return &lt;= limit events. </summary>
        public long? Limit { get; set; }
    }
}
