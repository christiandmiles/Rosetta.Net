// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Rosetta.Models
{
    /// <summary> Amount is some Value of a Currency. It is considered invalid to specify a Value without a Currency. </summary>
    public partial class Amount
    {
        /// <summary> Initializes a new instance of Amount. </summary>
        /// <param name="value"> Value of the transaction in atomic units represented as an arbitrary-sized signed integer. For example, 1 BTC would be represented by a value of 100000000. </param>
        /// <param name="currency"> Currency is composed of a canonical Symbol and Decimals. This Decimals value is used to convert an Amount.Value from atomic units (Satoshis) to standard units (Bitcoins). </param>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> or <paramref name="currency"/> is null. </exception>
        public Amount(string value, Currency currency)
        {
            if (value == null)
            {
                throw new ArgumentNullException(nameof(value));
            }
            if (currency == null)
            {
                throw new ArgumentNullException(nameof(currency));
            }

            Value = value;
            Currency = currency;
        }

        /// <summary> Initializes a new instance of Amount. </summary>
        /// <param name="value"> Value of the transaction in atomic units represented as an arbitrary-sized signed integer. For example, 1 BTC would be represented by a value of 100000000. </param>
        /// <param name="currency"> Currency is composed of a canonical Symbol and Decimals. This Decimals value is used to convert an Amount.Value from atomic units (Satoshis) to standard units (Bitcoins). </param>
        /// <param name="metadata"> Any object. </param>
        internal Amount(string value, Currency currency, object metadata)
        {
            Value = value;
            Currency = currency;
            Metadata = metadata;
        }

        /// <summary> Value of the transaction in atomic units represented as an arbitrary-sized signed integer. For example, 1 BTC would be represented by a value of 100000000. </summary>
        public string Value { get; set; }
        /// <summary> Currency is composed of a canonical Symbol and Decimals. This Decimals value is used to convert an Amount.Value from atomic units (Satoshis) to standard units (Bitcoins). </summary>
        public Currency Currency { get; set; }
        /// <summary> Any object. </summary>
        public object Metadata { get; set; }
    }
}
