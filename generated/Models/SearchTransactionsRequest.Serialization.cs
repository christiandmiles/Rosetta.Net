// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Rosetta.Models
{
    public partial class SearchTransactionsRequest : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("network_identifier");
            writer.WriteObjectValue(NetworkIdentifier);
            if (Optional.IsDefined(Operator))
            {
                writer.WritePropertyName("operator");
                writer.WriteStringValue(Operator.Value.ToString());
            }
            if (Optional.IsDefined(MaxBlock))
            {
                writer.WritePropertyName("max_block");
                writer.WriteNumberValue(MaxBlock.Value);
            }
            if (Optional.IsDefined(Offset))
            {
                writer.WritePropertyName("offset");
                writer.WriteNumberValue(Offset.Value);
            }
            if (Optional.IsDefined(Limit))
            {
                writer.WritePropertyName("limit");
                writer.WriteNumberValue(Limit.Value);
            }
            if (Optional.IsDefined(TransactionIdentifier))
            {
                writer.WritePropertyName("transaction_identifier");
                writer.WriteObjectValue(TransactionIdentifier);
            }
            if (Optional.IsDefined(AccountIdentifier))
            {
                writer.WritePropertyName("account_identifier");
                writer.WriteObjectValue(AccountIdentifier);
            }
            if (Optional.IsDefined(CoinIdentifier))
            {
                writer.WritePropertyName("coin_identifier");
                writer.WriteObjectValue(CoinIdentifier);
            }
            if (Optional.IsDefined(Currency))
            {
                writer.WritePropertyName("currency");
                writer.WriteObjectValue(Currency);
            }
            if (Optional.IsDefined(Status))
            {
                writer.WritePropertyName("status");
                writer.WriteStringValue(Status);
            }
            if (Optional.IsDefined(Type))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type);
            }
            if (Optional.IsDefined(Address))
            {
                writer.WritePropertyName("address");
                writer.WriteStringValue(Address);
            }
            if (Optional.IsDefined(Success))
            {
                writer.WritePropertyName("success");
                writer.WriteBooleanValue(Success.Value);
            }
            writer.WriteEndObject();
        }
    }
}
