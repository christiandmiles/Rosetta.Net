// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Rosetta.Models
{
    /// <summary> A ConstructionMetadataRequest is utilized to get information required to construct a transaction. The Options object used to specify which metadata to return is left purposely unstructured to allow flexibility for implementers. Options is not required in the case that there is network-wide metadata of interest. Optionally, the request can also include an array of PublicKeys associated with the AccountIdentifiers returned in ConstructionPreprocessResponse. </summary>
    public partial class ConstructionMetadataRequest
    {
        /// <summary> Initializes a new instance of ConstructionMetadataRequest. </summary>
        /// <param name="networkIdentifier"> The network_identifier specifies which network a particular object is associated with. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkIdentifier"/> is null. </exception>
        public ConstructionMetadataRequest(NetworkIdentifier networkIdentifier)
        {
            if (networkIdentifier == null)
            {
                throw new ArgumentNullException(nameof(networkIdentifier));
            }

            NetworkIdentifier = networkIdentifier;
            PublicKeys = new ChangeTrackingList<PublicKey>();
        }

        /// <summary> The network_identifier specifies which network a particular object is associated with. </summary>
        public NetworkIdentifier NetworkIdentifier { get; }
        /// <summary> Some blockchains require different metadata for different types of transaction construction (ex: delegation versus a transfer). Instead of requiring a blockchain node to return all possible types of metadata for construction (which may require multiple node fetches), the client can populate an options object to limit the metadata returned to only the subset required. </summary>
        public object Options { get; set; }
        public IList<PublicKey> PublicKeys { get; }
    }
}
