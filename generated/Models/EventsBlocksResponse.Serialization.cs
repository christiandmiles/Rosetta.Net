// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Rosetta.Models
{
    public partial class EventsBlocksResponse
    {
        internal static EventsBlocksResponse DeserializeEventsBlocksResponse(JsonElement element)
        {
            long maxSequence = default;
            IReadOnlyList<BlockEvent> events = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("max_sequence"))
                {
                    maxSequence = property.Value.GetInt64();
                    continue;
                }
                if (property.NameEquals("events"))
                {
                    List<BlockEvent> array = new List<BlockEvent>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(BlockEvent.DeserializeBlockEvent(item));
                    }
                    events = array;
                    continue;
                }
            }
            return new EventsBlocksResponse(maxSequence, events);
        }
    }
}
