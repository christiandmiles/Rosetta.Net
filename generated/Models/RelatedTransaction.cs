// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Rosetta.Models
{
    /// <summary> The related_transaction allows implementations to link together multiple transactions. An unpopulated network identifier indicates that the related transaction is on the same network. </summary>
    public partial class RelatedTransaction
    {
        /// <summary> Initializes a new instance of RelatedTransaction. </summary>
        /// <param name="transactionIdentifier"> The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool. </param>
        /// <param name="direction"> Used by RelatedTransaction to indicate the direction of the relation (i.e. cross-shard/cross-network sends may reference `backward` to an earlier transaction and async execution may reference `forward`). Can be used to indicate if a transaction relation is from child to parent or the reverse. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="transactionIdentifier"/> is null. </exception>
        internal RelatedTransaction(TransactionIdentifier transactionIdentifier, Direction direction)
        {
            if (transactionIdentifier == null)
            {
                throw new ArgumentNullException(nameof(transactionIdentifier));
            }

            TransactionIdentifier = transactionIdentifier;
            Direction = direction;
        }

        /// <summary> Initializes a new instance of RelatedTransaction. </summary>
        /// <param name="networkIdentifier"> The network_identifier specifies which network a particular object is associated with. </param>
        /// <param name="transactionIdentifier"> The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool. </param>
        /// <param name="direction"> Used by RelatedTransaction to indicate the direction of the relation (i.e. cross-shard/cross-network sends may reference `backward` to an earlier transaction and async execution may reference `forward`). Can be used to indicate if a transaction relation is from child to parent or the reverse. </param>
        internal RelatedTransaction(NetworkIdentifier networkIdentifier, TransactionIdentifier transactionIdentifier, Direction direction)
        {
            NetworkIdentifier = networkIdentifier;
            TransactionIdentifier = transactionIdentifier;
            Direction = direction;
        }

        /// <summary> The network_identifier specifies which network a particular object is associated with. </summary>
        public NetworkIdentifier NetworkIdentifier { get; }
        /// <summary> The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool. </summary>
        public TransactionIdentifier TransactionIdentifier { get; }
        /// <summary> Used by RelatedTransaction to indicate the direction of the relation (i.e. cross-shard/cross-network sends may reference `backward` to an earlier transaction and async execution may reference `forward`). Can be used to indicate if a transaction relation is from child to parent or the reverse. </summary>
        public Direction Direction { get; }
    }
}
