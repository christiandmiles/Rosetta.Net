// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Rosetta.Models
{
    /// <summary> Transactions contain an array of Operations that are attributable to the same TransactionIdentifier. </summary>
    public partial class Transaction
    {
        /// <summary> Initializes a new instance of Transaction. </summary>
        /// <param name="transactionIdentifier"> The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool. </param>
        /// <param name="operations"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="transactionIdentifier"/> or <paramref name="operations"/> is null. </exception>
        internal Transaction(TransactionIdentifier transactionIdentifier, IEnumerable<Operation> operations)
        {
            if (transactionIdentifier == null)
            {
                throw new ArgumentNullException(nameof(transactionIdentifier));
            }
            if (operations == null)
            {
                throw new ArgumentNullException(nameof(operations));
            }

            TransactionIdentifier = transactionIdentifier;
            Operations = operations.ToList();
            RelatedTransactions = new ChangeTrackingList<RelatedTransaction>();
        }

        /// <summary> Initializes a new instance of Transaction. </summary>
        /// <param name="transactionIdentifier"> The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool. </param>
        /// <param name="operations"> . </param>
        /// <param name="relatedTransactions"> . </param>
        /// <param name="metadata"> Transactions that are related to other transactions (like a cross-shard transaction) should include the tranaction_identifier of these transactions in the metadata. </param>
        internal Transaction(TransactionIdentifier transactionIdentifier, IReadOnlyList<Operation> operations, IReadOnlyList<RelatedTransaction> relatedTransactions, object metadata)
        {
            TransactionIdentifier = transactionIdentifier;
            Operations = operations;
            RelatedTransactions = relatedTransactions;
            Metadata = metadata;
        }

        /// <summary> The transaction_identifier uniquely identifies a transaction in a particular network and block or in the mempool. </summary>
        public TransactionIdentifier TransactionIdentifier { get; }
        public IReadOnlyList<Operation> Operations { get; }
        public IReadOnlyList<RelatedTransaction> RelatedTransactions { get; }
        /// <summary> Transactions that are related to other transactions (like a cross-shard transaction) should include the tranaction_identifier of these transactions in the metadata. </summary>
        public object Metadata { get; }
    }
}
