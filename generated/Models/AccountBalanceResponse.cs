// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Rosetta.Models
{
    /// <summary> An AccountBalanceResponse is returned on the /account/balance endpoint. If an account has a balance for each AccountIdentifier describing it (ex: an ERC-20 token balance on a few smart contracts), an account balance request must be made with each AccountIdentifier. The `coins` field was removed and replaced by by `/account/coins` in `v1.4.7`. </summary>
    public partial class AccountBalanceResponse
    {
        /// <summary> Initializes a new instance of AccountBalanceResponse. </summary>
        /// <param name="blockIdentifier"> The block_identifier uniquely identifies a block in a particular network. </param>
        /// <param name="balances"> A single account may have a balance in multiple currencies. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="blockIdentifier"/> or <paramref name="balances"/> is null. </exception>
        internal AccountBalanceResponse(BlockIdentifier blockIdentifier, IEnumerable<Amount> balances)
        {
            if (blockIdentifier == null)
            {
                throw new ArgumentNullException(nameof(blockIdentifier));
            }
            if (balances == null)
            {
                throw new ArgumentNullException(nameof(balances));
            }

            BlockIdentifier = blockIdentifier;
            Balances = balances.ToList();
        }

        /// <summary> Initializes a new instance of AccountBalanceResponse. </summary>
        /// <param name="blockIdentifier"> The block_identifier uniquely identifies a block in a particular network. </param>
        /// <param name="balances"> A single account may have a balance in multiple currencies. </param>
        /// <param name="metadata"> Account-based blockchains that utilize a nonce or sequence number should include that number in the metadata. This number could be unique to the identifier or global across the account address. </param>
        internal AccountBalanceResponse(BlockIdentifier blockIdentifier, IReadOnlyList<Amount> balances, object metadata)
        {
            BlockIdentifier = blockIdentifier;
            Balances = balances;
            Metadata = metadata;
        }

        /// <summary> The block_identifier uniquely identifies a block in a particular network. </summary>
        public BlockIdentifier BlockIdentifier { get; }
        /// <summary> A single account may have a balance in multiple currencies. </summary>
        public IReadOnlyList<Amount> Balances { get; }
        /// <summary> Account-based blockchains that utilize a nonce or sequence number should include that number in the metadata. This number could be unique to the identifier or global across the account address. </summary>
        public object Metadata { get; }
    }
}
