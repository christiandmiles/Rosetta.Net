// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Rosetta.Models
{
    /// <summary> The Version object is utilized to inform the client of the versions of different components of the Rosetta implementation. </summary>
    public partial class Version
    {
        /// <summary> Initializes a new instance of Version. </summary>
        /// <param name="rosettaVersion"> The rosetta_version is the version of the Rosetta interface the implementation adheres to. This can be useful for clients looking to reliably parse responses. </param>
        /// <param name="nodeVersion"> The node_version is the canonical version of the node runtime. This can help clients manage deployments. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="rosettaVersion"/> or <paramref name="nodeVersion"/> is null. </exception>
        internal Version(string rosettaVersion, string nodeVersion)
        {
            if (rosettaVersion == null)
            {
                throw new ArgumentNullException(nameof(rosettaVersion));
            }
            if (nodeVersion == null)
            {
                throw new ArgumentNullException(nameof(nodeVersion));
            }

            RosettaVersion = rosettaVersion;
            NodeVersion = nodeVersion;
        }

        /// <summary> Initializes a new instance of Version. </summary>
        /// <param name="rosettaVersion"> The rosetta_version is the version of the Rosetta interface the implementation adheres to. This can be useful for clients looking to reliably parse responses. </param>
        /// <param name="nodeVersion"> The node_version is the canonical version of the node runtime. This can help clients manage deployments. </param>
        /// <param name="middlewareVersion"> When a middleware server is used to adhere to the Rosetta interface, it should return its version here. This can help clients manage deployments. </param>
        /// <param name="metadata"> Any other information that may be useful about versioning of dependent services should be returned here. </param>
        internal Version(string rosettaVersion, string nodeVersion, string middlewareVersion, object metadata)
        {
            RosettaVersion = rosettaVersion;
            NodeVersion = nodeVersion;
            MiddlewareVersion = middlewareVersion;
            Metadata = metadata;
        }

        /// <summary> The rosetta_version is the version of the Rosetta interface the implementation adheres to. This can be useful for clients looking to reliably parse responses. </summary>
        public string RosettaVersion { get; }
        /// <summary> The node_version is the canonical version of the node runtime. This can help clients manage deployments. </summary>
        public string NodeVersion { get; }
        /// <summary> When a middleware server is used to adhere to the Rosetta interface, it should return its version here. This can help clients manage deployments. </summary>
        public string MiddlewareVersion { get; }
        /// <summary> Any other information that may be useful about versioning of dependent services should be returned here. </summary>
        public object Metadata { get; }
    }
}
