// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Rosetta.Models
{
    /// <summary> ConstructionPayloadsRequest is the request to `/construction/payloads`. It contains the network, a slice of operations, and arbitrary metadata that was returned by the call to `/construction/metadata`. Optionally, the request can also include an array of PublicKeys associated with the AccountIdentifiers returned in ConstructionPreprocessResponse. </summary>
    public partial class ConstructionPayloadsRequest
    {
        /// <summary> Initializes a new instance of ConstructionPayloadsRequest. </summary>
        /// <param name="networkIdentifier"> The network_identifier specifies which network a particular object is associated with. </param>
        /// <param name="operations"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="networkIdentifier"/> or <paramref name="operations"/> is null. </exception>
        public ConstructionPayloadsRequest(NetworkIdentifier networkIdentifier, IEnumerable<Operation> operations)
        {
            if (networkIdentifier == null)
            {
                throw new ArgumentNullException(nameof(networkIdentifier));
            }
            if (operations == null)
            {
                throw new ArgumentNullException(nameof(operations));
            }

            NetworkIdentifier = networkIdentifier;
            Operations = operations.ToList();
            PublicKeys = new ChangeTrackingList<PublicKey>();
        }

        /// <summary> The network_identifier specifies which network a particular object is associated with. </summary>
        public NetworkIdentifier NetworkIdentifier { get; }
        public IList<Operation> Operations { get; }
        /// <summary> Any object. </summary>
        public object Metadata { get; set; }
        public IList<PublicKey> PublicKeys { get; }
    }
}
