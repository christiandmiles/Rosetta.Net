// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Rosetta.Models
{
    public partial class CoinChange : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("coin_identifier");
            writer.WriteObjectValue(CoinIdentifier);
            writer.WritePropertyName("coin_action");
            writer.WriteStringValue(CoinAction.ToString());
            writer.WriteEndObject();
        }

        internal static CoinChange DeserializeCoinChange(JsonElement element)
        {
            CoinIdentifier coinIdentifier = default;
            CoinAction coinAction = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("coin_identifier"))
                {
                    coinIdentifier = CoinIdentifier.DeserializeCoinIdentifier(property.Value);
                    continue;
                }
                if (property.NameEquals("coin_action"))
                {
                    coinAction = new CoinAction(property.Value.GetString());
                    continue;
                }
            }
            return new CoinChange(coinIdentifier, coinAction);
        }
    }
}
