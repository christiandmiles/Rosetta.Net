// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Rosetta.Models
{
    /// <summary> Currency is composed of a canonical Symbol and Decimals. This Decimals value is used to convert an Amount.Value from atomic units (Satoshis) to standard units (Bitcoins). </summary>
    public partial class Currency
    {
        /// <summary> Initializes a new instance of Currency. </summary>
        /// <param name="symbol"> Canonical symbol associated with a currency. </param>
        /// <param name="decimals"> Number of decimal places in the standard unit representation of the amount. For example, BTC has 8 decimals. Note that it is not possible to represent the value of some currency in atomic units that is not base 10. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="symbol"/> is null. </exception>
        public Currency(string symbol, int decimals)
        {
            if (symbol == null)
            {
                throw new ArgumentNullException(nameof(symbol));
            }

            Symbol = symbol;
            Decimals = decimals;
        }

        /// <summary> Initializes a new instance of Currency. </summary>
        /// <param name="symbol"> Canonical symbol associated with a currency. </param>
        /// <param name="decimals"> Number of decimal places in the standard unit representation of the amount. For example, BTC has 8 decimals. Note that it is not possible to represent the value of some currency in atomic units that is not base 10. </param>
        /// <param name="metadata"> Any additional information related to the currency itself. For example, it would be useful to populate this object with the contract address of an ERC-20 token. </param>
        internal Currency(string symbol, int decimals, object metadata)
        {
            Symbol = symbol;
            Decimals = decimals;
            Metadata = metadata;
        }

        /// <summary> Canonical symbol associated with a currency. </summary>
        public string Symbol { get; set; }
        /// <summary> Number of decimal places in the standard unit representation of the amount. For example, BTC has 8 decimals. Note that it is not possible to represent the value of some currency in atomic units that is not base 10. </summary>
        public int Decimals { get; set; }
        /// <summary> Any additional information related to the currency itself. For example, it would be useful to populate this object with the contract address of an ERC-20 token. </summary>
        public object Metadata { get; set; }
    }
}
